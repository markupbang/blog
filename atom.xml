<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bang`s</title>
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="https://markupbang.github.io/blog/"/>
  <updated>2017-08-30T08:38:56.746Z</updated>
  <id>https://markupbang.github.io/blog/</id>
  
  <author>
    <name>Sohyun Bang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Automation</title>
    <link href="https://markupbang.github.io/blog/2017/08/30/automation/"/>
    <id>https://markupbang.github.io/blog/2017/08/30/automation/</id>
    <published>2017-08-30T08:17:36.000Z</published>
    <updated>2017-08-30T08:38:56.746Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="addition">+ node version 7.5.0</span></div><div class="line"><span class="addition">+ npm version 4.1.2</span></div></pre></td></tr></table></figure>
<h1 id="Gulp-setting"><a href="#Gulp-setting" class="headerlink" title="Gulp setting"></a>Gulp setting</h1><h2 id="1-gulp-sass-lint"><a href="#1-gulp-sass-lint" class="headerlink" title="1. gulp-sass-lint"></a>1. gulp-sass-lint</h2><h3 id="gulp-gulp-sass-lint"><a href="#gulp-gulp-sass-lint" class="headerlink" title="gulp + gulp-sass-lint"></a>gulp + gulp-sass-lint</h3><ul>
<li>‘gulp-sass-lint’를 사용해 sass파일의 실수를 찾아주는 코드 검사기</li>
</ul>
<h4 id="npm-install"><a href="#npm-install" class="headerlink" title="npm install"></a>npm install</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install gulp-sass-lint --save-dev</div></pre></td></tr></table></figure>
<h4 id="gulpfile-js"><a href="#gulpfile-js" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h4><h5 id="플러그인-호출-경로-저장"><a href="#플러그인-호출-경로-저장" class="headerlink" title="플러그인 호출, 경로 저장"></a>플러그인 호출, 경로 저장</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</div><div class="line">    sassLint = <span class="built_in">require</span>(<span class="string">'gulp-sass-lint'</span>);</div></pre></td></tr></table></figure>
<h5 id="task-작성"><a href="#task-작성" class="headerlink" title="task 작성"></a>task 작성</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> gulp.src(<span class="string">'sass/**/*.s+(a|c)ss'</span>)</div><div class="line">    .pipe(sassLint())</div><div class="line">    .pipe(sassLint.format())</div><div class="line">    .pipe(sassLint.failOnError())</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><img src="./src/images/sass-lint-img.png" alt="difference"></p>
<blockquote>
<p>결론은 gulp-sass-lint 플러그인을 따로 쓰는것보다 gulp-sass의 error message가 훨씬 좋음</p>
</blockquote>
<h2 id="2-gulp-clean-css-clean-js"><a href="#2-gulp-clean-css-clean-js" class="headerlink" title="2. gulp clean-css clean-js"></a>2. gulp clean-css clean-js</h2><h3 id="gulp-clean"><a href="#gulp-clean" class="headerlink" title="gulp-clean"></a>gulp-clean</h3><blockquote>
<p>gulp-clean: 기존 dist 파일 삭제</p>
</blockquote>
<p><a href="https://www.npmjs.com/package/gulp-clean" target="_blank" rel="external">gulp-clean</a></p>
<h4 id="npm-install-amp-use"><a href="#npm-install-amp-use" class="headerlink" title="npm install &amp; use"></a>npm install &amp; use</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev gulp-clean</div><div class="line"></div><div class="line">gulp clean-css</div><div class="line">gulp clean-js</div></pre></td></tr></table></figure>
<h4 id="gulpfile-js-1"><a href="#gulpfile-js-1" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h4><h5 id="플러그인-호출-경로-저장-1"><a href="#플러그인-호출-경로-저장-1" class="headerlink" title="플러그인 호출, 경로 저장"></a>플러그인 호출, 경로 저장</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> clean = <span class="built_in">require</span>(<span class="string">'gulp-clean'</span>);</div></pre></td></tr></table></figure>
<h5 id="task-작성-1"><a href="#task-작성-1" class="headerlink" title="task 작성"></a>task 작성</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">gulp.task(<span class="string">'clean-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> gulp.src(dist + <span class="string">'/*.css'</span>, &#123;<span class="attr">read</span>: <span class="literal">false</span>&#125;)</div><div class="line">            .pipe(clean());</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'clean-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">	<span class="keyword">return</span> gulp.src(dist + <span class="string">'/*.js'</span>, &#123;<span class="attr">read</span>: <span class="literal">false</span>&#125;)</div><div class="line">			.pipe(clean());</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="3-gulp-building"><a href="#3-gulp-building" class="headerlink" title="3. gulp building"></a>3. gulp building</h2><h3 id="browserify-vinyl-source-stream-vinyl-buffer-gulp-uglify-gulp-jshint"><a href="#browserify-vinyl-source-stream-vinyl-buffer-gulp-uglify-gulp-jshint" class="headerlink" title="browserify + vinyl-source-stream + vinyl-buffer + gulp-uglify + gulp-jshint"></a>browserify + vinyl-source-stream + vinyl-buffer + gulp-uglify + gulp-jshint</h3><blockquote>
<p>gulp-sass: sass 파일병합, 빌드 <a href="https://www.npmjs.com/package/gulp-sass" target="_blank" rel="external">gulp-sass</a><br>browserify + vinyl-source-stream + vinyl-buffer: js 파일 병합, 빌드를 위한 플러그인 <a href="http://programmingsummaries.tistory.com/382" target="_blank" rel="external">gulp와 vinyl</a><br>gulp-uglify: js 파일 압축을 위한 플러그인<br>gulp-jshint: js 코드 검사를 위한 플러그인 <a href="https://blog.outsider.ne.kr/1007" target="_blank" rel="external">JSHint 옵션</a><br>jshint-stylish: JSHint 에러 메세지의 가독성을 높여주는 플러그인</p>
</blockquote>
<h4 id="npm-install-1"><a href="#npm-install-1" class="headerlink" title="npm install"></a>npm install</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install browserify vinyl-buffer vinyl-source-stream gulp-uglify gulp-jshint jshint-stylish --save-dev</div></pre></td></tr></table></figure>
<h4 id="gulpfile-js-2"><a href="#gulpfile-js-2" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h4><h5 id="플러그인-호출-경로-저장-2"><a href="#플러그인-호출-경로-저장-2" class="headerlink" title="플러그인 호출, 경로 저장"></a>플러그인 호출, 경로 저장</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>),</div><div class="line">    sourcemaps = <span class="built_in">require</span>(<span class="string">'gulp-sourcemaps'</span>),</div><div class="line">    jshint = <span class="built_in">require</span>(<span class="string">'gulp-jshint'</span>),</div><div class="line">    stylish = <span class="built_in">require</span>(<span class="string">'jshint-stylish'</span>),</div><div class="line">    browserify = <span class="built_in">require</span>(<span class="string">'browserify'</span>),</div><div class="line">    source = <span class="built_in">require</span>(<span class="string">'vinyl-source-stream'</span>),</div><div class="line">    buffer = <span class="built_in">require</span>(<span class="string">'vinyl-buffer'</span>),</div><div class="line">    uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>);</div></pre></td></tr></table></figure>
<h5 id="task-작성-2"><a href="#task-작성-2" class="headerlink" title="task 작성"></a>task 작성</h5><ul>
<li>sass와 함께 빌드</li>
</ul>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">gulp.task(<span class="string">'lint-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.src(SRC.JS)</div><div class="line">    .pipe(jshint())</div><div class="line">    .pipe(jshint.reporter(<span class="string">'jshint-stylish'</span>))</div><div class="line">    .pipe(jshint.reporter(<span class="string">'fail'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.src(SRC.SCSS)</div><div class="line">    .pipe(sourcemaps.init(&#123;<span class="attr">loadMaps</span>: <span class="literal">true</span>&#125;))</div><div class="line">    .pipe(sass(&#123;<span class="attr">outputStyle</span>: <span class="string">'compact'</span>&#125;).on(<span class="string">'error'</span>, sass.logError))</div><div class="line">    .pipe(sourcemaps.write(DIR.MAP))</div><div class="line">    .pipe(gulp.dest(dist));</div><div class="line">&#125;);</div><div class="line"></div><div class="line">gulp.task(<span class="string">'js'</span>, [<span class="string">'lint-js'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> browserify(DIR.SRC + <span class="string">'/js/entry.js'</span>)</div><div class="line">   .bundle()</div><div class="line">   .pipe(source(<span class="string">'bundle.js'</span>))</div><div class="line">   .pipe(buffer())</div><div class="line">   .pipe(sourcemaps.init(&#123;<span class="attr">loadMaps</span>: <span class="literal">true</span>&#125;))</div><div class="line">   .pipe(sourcemaps.write(DIR.MAP))</div><div class="line">   .pipe(gulp.dest(dist));</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="4-gulp-watch"><a href="#4-gulp-watch" class="headerlink" title="4. gulp watch"></a>4. gulp watch</h2><h3 id="watch"><a href="#watch" class="headerlink" title="watch"></a>watch</h3><blockquote>
<p>scss와 js파일이 변경되면 sass,js task(build)를 재실행</p>
</blockquote>
<h4 id="npm-install-2"><a href="#npm-install-2" class="headerlink" title="npm install"></a>npm install</h4><p>gulp 내장 플러그인</p>
<h4 id="gulpfile-js-3"><a href="#gulpfile-js-3" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h4><h5 id="task-작성-3"><a href="#task-작성-3" class="headerlink" title="task 작성"></a>task 작성</h5><ul>
<li>sass와 함께 빌드<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// watch</span></div><div class="line">gulp.task(<span class="string">'watch'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.watch(SRC.SCSS, [<span class="string">'sass'</span>]);</div><div class="line">    gulp.watch(SRC.JS, [<span class="string">'js'</span>]);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="5-gulp-minify"><a href="#5-gulp-minify" class="headerlink" title="5. gulp minify"></a>5. gulp minify</h2><h3 id="Minify-css-js"><a href="#Minify-css-js" class="headerlink" title="Minify css, js"></a>Minify css, js</h3><h4 id="npm-install-amp-use-1"><a href="#npm-install-amp-use-1" class="headerlink" title="npm install &amp; use"></a>npm install &amp; use</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev gulp-rename gulp-uglify gulp-uglifycss</div></pre></td></tr></table></figure>
<h4 id="gulpfile-js-4"><a href="#gulpfile-js-4" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h4><h5 id="플러그인-호출-경로-저장-3"><a href="#플러그인-호출-경로-저장-3" class="headerlink" title="플러그인 호출, 경로 저장"></a>플러그인 호출, 경로 저장</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">'gulp-uglify'</span>),</div><div class="line">    uglifycss = <span class="built_in">require</span>(<span class="string">'gulp-uglifycss'</span>),</div><div class="line">    rename = <span class="built_in">require</span>(<span class="string">'gulp-rename'</span>);</div></pre></td></tr></table></figure>
<h5 id="task-작성-4"><a href="#task-작성-4" class="headerlink" title="task 작성"></a>task 작성</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// min build</span></div><div class="line">gulp.task(<span class="string">'min-js'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">    gulp.src(dist +<span class="string">'/*.js'</span>)</div><div class="line">    .pipe(uglify())</div><div class="line">    .pipe(rename(&#123;</div><div class="line">        suffix: <span class="string">'.min'</span></div><div class="line">    &#125;))</div><div class="line">    .pipe(gulp.dest(dist));</div><div class="line"></div><div class="line">&#125;);</div><div class="line">gulp.task(<span class="string">'min-css'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.src(dist +<span class="string">'/*.css'</span>)</div><div class="line">    .pipe(uglifycss(&#123; <span class="comment">//배포용</span></div><div class="line">        <span class="string">"maxLineLen"</span>: <span class="number">80</span>,</div><div class="line">        <span class="string">"uglyComments"</span>: <span class="literal">true</span></div><div class="line">    &#125;))</div><div class="line">    .pipe(rename(&#123;</div><div class="line">        suffix: <span class="string">'.min'</span></div><div class="line">    &#125;))</div><div class="line">    .pipe(gulp.dest(dist));</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="6-gulp-imagemin"><a href="#6-gulp-imagemin" class="headerlink" title="6. gulp imagemin"></a>6. gulp imagemin</h2><h3 id="Minify-PNG-JPEG-GIF-and-SVG-images-with-imagemin"><a href="#Minify-PNG-JPEG-GIF-and-SVG-images-with-imagemin" class="headerlink" title="Minify PNG, JPEG, GIF and SVG images with imagemin"></a>Minify PNG, JPEG, GIF and SVG images with imagemin</h3><h4 id="npm-install-amp-use-2"><a href="#npm-install-amp-use-2" class="headerlink" title="npm install &amp; use"></a>npm install &amp; use</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install --save-dev gulp-rename gulp-uglify gulp-uglifycss</div></pre></td></tr></table></figure>
<h4 id="gulpfile-js-5"><a href="#gulpfile-js-5" class="headerlink" title="gulpfile.js"></a>gulpfile.js</h4><h5 id="플러그인-호출-경로-저장-4"><a href="#플러그인-호출-경로-저장-4" class="headerlink" title="플러그인 호출, 경로 저장"></a>플러그인 호출, 경로 저장</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> imagemin = <span class="built_in">require</span>(<span class="string">'gulp-imagemin'</span>);</div></pre></td></tr></table></figure>
<h5 id="task-작성-5"><a href="#task-작성-5" class="headerlink" title="task 작성"></a>task 작성</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">gulp.task(<span class="string">'imagemin'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.src(SRC.IMG)</div><div class="line">    .pipe(imagemin())</div><div class="line">    .pipe(gulp.dest(dist))</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<hr>
<h1 id="npm-scripts"><a href="#npm-scripts" class="headerlink" title="npm scripts"></a>npm scripts</h1><p>개발작업에서 사용되는 build와 배포에 사용되는 build를 구분한다.</p>
<h2 id="1-devbuild-개발용"><a href="#1-devbuild-개발용" class="headerlink" title="1.devbuild(개발용) :"></a>1.devbuild(개발용) :</h2><h4 id="npm-start"><a href="#npm-start" class="headerlink" title="npm start"></a>npm start</h4><p>npm run devbuild</p>
<h5 id="npm-script"><a href="#npm-script" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"devbuild"</span>: <span class="string">"npm run lint:sass &amp;&amp; npm run lint:js &amp;&amp; npm run watch:file"</span></div></pre></td></tr></table></figure>
<h3 id="sass-lint"><a href="#sass-lint" class="headerlink" title="sass-lint"></a>sass-lint</h3><ul>
<li>sass파일의 실수를 찾아주는 코드 검사기: node-sass의 기본 lint를 사용해도 무방함</li>
</ul>
<h5 id="npm-script-1"><a href="#npm-script-1" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"lint:sass"</span>: <span class="string">"sass-lint -c .sass-lint.yml 'src/sass/utils/, src/sass/gtris.scss' -v -q"</span></div></pre></td></tr></table></figure>
<p><a href="https://www.npmjs.com/package/sass-lint" target="_blank" rel="external">sass-lint</a></p>
<h4 id="jshint"><a href="#jshint" class="headerlink" title="jshint"></a>jshint</h4><ul>
<li>자바스크립트 코드 검사도구<br><a href="https://www.npmjs.com/package/jshint" target="_blank" rel="external">jshint</a><br><a href="https://blog.outsider.ne.kr/1007" target="_blank" rel="external">jshint options</a></li>
</ul>
<h5 id="npm-script-2"><a href="#npm-script-2" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"lint:js"</span>: <span class="string">"jshint --verbose src/js/util/ src/js/components"</span></div></pre></td></tr></table></figure>
<h4 id="nodemon"><a href="#nodemon" class="headerlink" title="nodemon"></a>nodemon</h4><ul>
<li>소스 수정시 자동으로 서버를 재시작 해주는 도구<br><a href="https://nodemon.io/" target="_blank" rel="external">nodemon</a></li>
</ul>
<h5 id="npm-script-3"><a href="#npm-script-3" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"watch:file"</span>: <span class="string">"nodemon -e scss,js --watch src -x \"npm run build:css &amp;&amp; npm run build:js\""</span></div></pre></td></tr></table></figure>
<h4 id="node-sass"><a href="#node-sass" class="headerlink" title="node-sass"></a>node-sass</h4><p><a href="https://github.com/sass/node-sass" target="_blank" rel="external">node-sass</a></p>
<h5 id="npm-script-4"><a href="#npm-script-4" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"build:css"</span>: <span class="string">"node-sass --output-style compact --indent-type tab --indent-width 1 --source-map dist/map/ -o src/sass/utils/ src/sass/gtris.scss dist/gtris.css"</span></div></pre></td></tr></table></figure>
<h4 id="browserify"><a href="#browserify" class="headerlink" title="browserify"></a>browserify</h4><ul>
<li>js bundler<br><a href="http://browserify.org/" target="_blank" rel="external">browserify</a></li>
</ul>
<h5 id="npm-script-5"><a href="#npm-script-5" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"build:js"</span>: <span class="string">"browserify src/js/entry.js &gt; dist/bundle.js"</span></div></pre></td></tr></table></figure>
<h2 id="2-build-배포용"><a href="#2-build-배포용" class="headerlink" title="2.build(배포용)"></a>2.build(배포용)</h2><h4 id="npm-start-1"><a href="#npm-start-1" class="headerlink" title="npm start"></a>npm start</h4><p>npm run build</p>
<h5 id="npm-script-6"><a href="#npm-script-6" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="string">"build"</span>: <span class="string">"npm run build:css &amp;&amp; uglifyjs src/js/util/*.js src/js/components/*.js -o dist/bundle.min.js --source-map dist/map/bundle.min.js.map -p 5 -c -m"</span></div></pre></td></tr></table></figure>
<h3 id="uglifyjs"><a href="#uglifyjs" class="headerlink" title="uglifyjs"></a>uglifyjs</h3><ul>
<li>js파일 압축<br><a href="http://lisperator.net/uglifyjs/" target="_blank" rel="external">uglifyjs</a></li>
</ul>
<h5 id="npm-script-7"><a href="#npm-script-7" class="headerlink" title="npm script"></a>npm script</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uglifyjs src/js/util/*.js src/js/components/*.js -o dist/bundle.min.js --<span class="built_in">source</span>-map dist/map/bundle.min.js.map -p 5 -c -m</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight diff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;co
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Atom Packages</title>
    <link href="https://markupbang.github.io/blog/2017/08/11/atom-packages/"/>
    <id>https://markupbang.github.io/blog/2017/08/11/atom-packages/</id>
    <published>2017-08-11T06:07:19.000Z</published>
    <updated>2017-08-14T07:53:34.072Z</updated>
    
    <content type="html"><![CDATA[<p>아톰에서 유용하게 사용하고 있는 패키지들을 소개해요.</p>
<h2 id="Active-Power-Mode"><a href="#Active-Power-Mode" class="headerlink" title="Active Power Mode"></a><a href="https://atom.io/packages/activate-power-mode" target="_blank" rel="external">Active Power Mode</a></h2><p>졸리거나 지루할때 사용하면 따봉<br>화면 흔들림과 소리는 끄고 사용. 안그러면 아톰 뻗어요.</p>
<p><img src="https://i.github-camo.com/b1d03b9b7a9d7dc9a32d1eab307b5378f8c59a7b/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f3638383431352f31313631353536352f31306631363435362d396336352d313165352d386166342d3236356630316663383361302e676966" alt="_"></p>
<h2 id="aligner"><a href="#aligner" class="headerlink" title="aligner"></a><a href="https://atom.io/packages/aligner" target="_blank" rel="external">aligner</a></h2><p><img src="https://i.github-camo.com/00db833ad432a419abb9fd49bcd6297ab823d9a2/68747470733a2f2f7261772e6769746875622e636f6d2f61647269616e6c656534342f61746f6d2d616c69676e65722f6d61737465722f64656d6f2e676966" alt="aligner"></p>
<p>key값과 value값을 정렬해줍니다.</p>
<h2 id="atom-beautify"><a href="#atom-beautify" class="headerlink" title="atom-beautify"></a><a href="https://atom.io/packages/atom-beautify" target="_blank" rel="external">atom-beautify</a></h2><p><img src="https://i.github-camo.com/5229b375979441bdcee790e2f0802b3899678baa/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f313838353333332f31363534323732372f64623532616463362d343038612d313165362d383234652d3034616564303662643266372e706e67" alt="before"><br><img src="https://i.github-camo.com/8f053415f4dfba4849d9bbe8327425d54511d94b/68747470733a2f2f636c6f75642e67697468756275736572636f6e74656e742e636f6d2f6173736574732f313838353333332f31363534323732382f64636163333730302d343038612d313165362d386533352d3963386663343433326564632e706e67" alt="after"></p>
<p>언어별로 코드를 정리해 줍니다.<br>지원하는 언어도 매우 많습니다.</p>
<h2 id="auto-detect-indentation"><a href="#auto-detect-indentation" class="headerlink" title="auto-detect-indentation"></a><a href="https://atom.io/packages/auto-detect-indentation" target="_blank" rel="external">auto-detect-indentation</a></h2><p>언어마다 Tab Length를 자동으로 파악해서 세팅해줌<br>아톰은 Space를 사용하는지 Tab을 사용하고 있는지 알려주지 않지만 이 패키지를 설치하면 표시가 되고 누르면 바꿀 수 있다.</p>
<h2 id="color-picker"><a href="#color-picker" class="headerlink" title="color-picker"></a><a href="https://atom.io/packages/color-picker" target="_blank" rel="external">color-picker</a></h2><p><img src="https://i.github-camo.com/467c72e686f00893c3d36bf46499e76c10f31787/68747470733a2f2f6769746875622e636f6d2f74686f6d61736c696e647374726f6d2f636f6c6f722d7069636b65722f7261772f6d61737465722f707265766965772e676966" alt="color picker"><br>컬러값 추출</p>
<h2 id="emmet"><a href="#emmet" class="headerlink" title="emmet"></a>emmet</h2><p>생략</p>
<h2 id="goto-last-edit"><a href="#goto-last-edit" class="headerlink" title="goto-last-edit"></a><a href="https://atom.io/packages/goto-last-edit" target="_blank" rel="external">goto-last-edit</a></h2><p>마지막 수정장소로 커서 이동해줌</p>
<h2 id="language-markdown"><a href="#language-markdown" class="headerlink" title="language-markdown"></a>language-markdown</h2><p>markdown 문법 패키지</p>
<h2 id="markdown-writer"><a href="#markdown-writer" class="headerlink" title="markdown-writer"></a><a href="https://atom.io/packages/markdown-writer" target="_blank" rel="external">markdown-writer</a></h2><p><img src="https://i.github-camo.com/216ebba971ab38d17d6eabdaf236d042a55b35b8/687474703a2f2f692e696d6775722e636f6d2f7339656b4d6e732e676966" alt="markdown-writer"></p>
<p>markdown 작성을 편리하게 해준다. 이미지와 링크 삽입도 매우 편함<br>keymaps 작성 필요</p>
<h2 id="minimap"><a href="#minimap" class="headerlink" title="minimap"></a>minimap</h2><p>생략</p>
<h2 id="platformio-ide-terminal"><a href="#platformio-ide-terminal" class="headerlink" title="platformio-ide-terminal"></a>platformio-ide-terminal</h2><p><img src="https://i.github-camo.com/377b661d04efa239cc1bb91cebd87a0a81f6f6ce/68747470733a2f2f6769746875622e636f6d2f6a6572656d7972616d696e2f7465726d696e616c2d706c75732f7261772f6d61737465722f7265736f75726365732f64656d6f2e676966" alt="PlatformIO IDE Terminal"></p>
<p>Atom 안에서 터미널 띄움</p>
<h2 id="project-manager"><a href="#project-manager" class="headerlink" title="project-manager"></a><a href="https://atom.io/packages/project-manager" target="_blank" rel="external">project-manager</a></h2><p><img src="https://i.github-camo.com/9f58c50dd32d6173bb555f1a0ca08c713d8a2f2a/68747470733a2f2f7261772e6769746875622e636f6d2f64616e69656c62726f64696e2f61746f6d2d70726f6a6563742d6d616e616765722f6d61737465722f70726f6a6563742d6d616e616765722e676966" alt="Project Manager"></p>
<p>프로젝트를 저장해 단축키로 쉽게 폴더로 이동이 가능하다. 새로 띄울수도 있고 하나의 윈도우에서도 자유롭게 이동할 수 있다.</p>
<h2 id="Remote-FTP"><a href="#Remote-FTP" class="headerlink" title="Remote-FTP"></a><a href="https://atom.io/packages/Remote-FTP" target="_blank" rel="external">Remote-FTP</a></h2><p><img src="https://i.github-camo.com/919eb5e4f6505917c0ad7263aa2626f5eac25dad/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6963657465652f72656d6f74652d6674702f6d61737465722f73637265656e73686f742e706e67" alt="Remote-FTP"></p>
<p>원격 FTP/FTPS/SFTP를 사용할 수 있다.<br>로컬에 다운받아진 후 작업할 수 있다. 수정한 후 서버와 동기화는 선택할 수 있다.</p>
<h2 id="seti-icons"><a href="#seti-icons" class="headerlink" title="seti-icons"></a>seti-icons</h2><p><img src="https://i.github-camo.com/bcbbef1f2dbc1260b544156c3d02a13db4c46b6c/68747470733a2f2f6769746875622e636f6d2f6a65737365776565642f736574692d75692f7261772f6d61737465722f73637265656e73686f742d69636f6e732e706e67" alt="Seti Icons"></p>
<p>파일타입별 아이콘 표시</p>
<h2 id="sync-settings"><a href="#sync-settings" class="headerlink" title="sync-settings"></a><a href="https://atom.io/packages/sync-settings" target="_blank" rel="external">sync-settings</a></h2><p>Atom의 설정파일을 gist에 백업하거나 복원!<br>gist 설정이 귀찮긴 하지만 한번해놓으면 좋다.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;아톰에서 유용하게 사용하고 있는 패키지들을 소개해요.&lt;/p&gt;
&lt;h2 id=&quot;Active-Power-Mode&quot;&gt;&lt;a href=&quot;#Active-Power-Mode&quot; class=&quot;headerlink&quot; title=&quot;Active Power Mode&quot;&gt;&lt;/
    
    </summary>
    
      <category term="Tools" scheme="https://markupbang.github.io/blog/categories/Tools/"/>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://markupbang.github.io/blog/2017/08/11/hello-world/"/>
    <id>https://markupbang.github.io/blog/2017/08/11/hello-world/</id>
    <published>2017-08-11T05:36:17.457Z</published>
    <updated>2017-08-11T05:36:17.458Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
